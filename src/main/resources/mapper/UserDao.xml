<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.appx.dao.UserDao">

    <sql id="Base_Column_List">
        id,username,nickname,email,phone,loginTime,createTime,status,isLock,icard,avatar,qqOpenId,money,signTime,qq,qqNotify,emailNotify,inviteUserId
    </sql>
    
    <select id="findByQQOpenId" resultType="User">
        select
        <include refid="Base_Column_List"/>,password
        from user where qqOpenId=#{qqOpenId}
    </select>


    <update id="sign">
        update user set signTime=#{signTime} where id=#{userId};
    </update>

    <select id="moneyTop10" resultType="User">
    select
        <include refid="Base_Column_List"/>
        from user
        order by money desc
        limit 10;
    </select>

    <update id="addMoney">
        update user set money=money+#{money} where id=#{userId}
    </update>

    
<select id="findByInviteUserId" resultType="User">
    select
    <include refid="Base_Column_List"/>
    from user
    where inviteUserId=#{inviteUserId}
</select>

    <select id="findByQq" resultType="User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user u WHERE  u.qq = #{qq}
    </select>

    <select id="findByUsername" resultType="User">
        SELECT
        <include refid="Base_Column_List"/>,password
         FROM user u WHERE  u.username = #{username}
        or u.email = #{email}
    </select>
    
    <select id="findManager" resultType="User">
        SELECT
        <include refid="Base_Column_List"/>,password
        FROM user where id IN ( SELECT userid FROM userrole WHERE roleId=1 );
    </select>

    <select id="findByPhone" resultType="User">
        select
        <include refid="Base_Column_List"/>
         from user where phone=#{phone}
    </select>
    <select id="findByEmail" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user where email=#{email}
    </select>
    
    <update id="updateNotifySz">
        update user set qqNotify=#{qqNotify},emailNotify=#{emailNotify} where id=#{id}
    </update>
    
    <select id="findSubscribeUser" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user
        WHERE id IN(
            SELECT userId FROM articlesubscribe
            WHERE articleGroupId=#{articleGroupId}
            OR articleGroupId IN (
              SELECT parentId FROM articleGroup WHERE id=#{articleGroupId}
            )
        )

    </select>

    <update id="resetByAnyDay0">
      update user set signTime=null;
    </update>

    <select id="selectByPrimaryKey" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user WHERE id=#{id}
    </select>

    <select id="find" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user WHERE 1=1
        order by id desc
    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
      insert into user(username,password,nickname,email,phone,createTime,status,isLock,avatar,qqOpenId,inviteUserId,qq)
      values(#{username},#{password},#{nickname},#{email},#{phone},#{createTime},#{status},#{isLock},#{avatar},#{qqOpenId},#{inviteUserId},#{qq})
    </insert>

    <update id="updateByPrimaryKey">
        update user set nickname=#{nickname},email=#{email},phone=#{phone},qq=#{qq}
        where id=#{id}
    </update>

    <update id="createIcard">
        update user set icard=UUID() where id=#{id}
    </update>

    <select id="findByIcard" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from user where icard=#{icard}
    </select>
    
    <update id="updateQQOpenId">
        update user set  qqOpenId=#{qqOpenId} where id=#{id}
    </update>
</mapper>